<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Codeklutz</title>
    <link>https://codeklutz.com/</link>
    <description>Recent content on Codeklutz</description>
    <image>
      <url>https://codeklutz.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://codeklutz.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 20 Nov 2022 19:38:00 +0000</lastBuildDate><atom:link href="https://codeklutz.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Today I learnt:422 HTTP Error code</title>
      <link>https://codeklutz.com/posts/today-i-learnt422-http-error-code/</link>
      <pubDate>Sun, 20 Nov 2022 19:38:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/today-i-learnt422-http-error-code/</guid>
      <description>Today while testing a soap API at work, I came across this HTTP error code called HTTP/1.1 422 Unprocessable Entity . According to MDN Web docs, it means the following :
The HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.</description>
    </item>
    
    <item>
      <title>Today I learnt: Interesting Things in Java 11</title>
      <link>https://codeklutz.com/posts/today-i-learnt-interesting-things-in-java-11/</link>
      <pubDate>Sun, 20 Nov 2022 18:48:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/today-i-learnt-interesting-things-in-java-11/</guid>
      <description>I came across a fascinating Java talk on youtube by Devoxx 2022 Hanno Embregts. This article is about a few java snippets I encountered. The purpose of today‚Äôs TIL is to have a list of interesting things we could do in Java and not deep dive into each concept.
Today‚Äôs TIL : Crazy things to do with Java 11+
Initializing Array and var keywordPermalink Having the var keyword in a statically typed language such as Java was fascinating in itself(an article on this in the future :).</description>
    </item>
    
    <item>
      <title>Today I learnt: Database Version Control</title>
      <link>https://codeklutz.com/posts/today-i-learnt-database-version-control/</link>
      <pubDate>Mon, 07 Nov 2022 15:49:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/today-i-learnt-database-version-control/</guid>
      <description>Upon stumbling upon this motivating HN post by Simon Willison I have been inspired to start a Today I learnt(TIL) series of my own. This seems like a doable promising idea where I do not have the self-imposed pressure of researching for a blog idea and making a seperate time to write that specific post. Wrting this TIL flows naturally in day-to-day work flow where I could just say ‚ÄúHey I just learnt about this XYZ ,I should write about it‚Äù.</description>
    </item>
    
    <item>
      <title>Tackling procrastination and kubernetes study</title>
      <link>https://codeklutz.com/posts/tackling-procrastination-and-kubernetes-study/</link>
      <pubDate>Fri, 25 Feb 2022 15:45:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/tackling-procrastination-and-kubernetes-study/</guid>
      <description>After a long series of procrastination and getting the hit of motivation from reading Atomic Habits(great book which I recommend others) ,I‚Äôm finally learning kubernetes basics.As a motivator to get better at writing and publish more posts as well as learn kubernetes.I have decided to publish 1 article every Sunday.I would like to post 2 posts per week but I want to start small and consistent. Once again I‚Äôm treating my blog as a journal to showcase how much I actually understand kubernetes.</description>
    </item>
    
    <item>
      <title>Tech Recap Journal- Januaryüìì</title>
      <link>https://codeklutz.com/posts/tech-recap-journal-january/</link>
      <pubDate>Tue, 01 Feb 2022 15:15:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/tech-recap-journal-january/</guid>
      <description>I tried a lot of things in January not necessarily everything learnt was used and and not every side project which I worked on got live.
However I learnt many lessons from my own failures and gained more insights when I started some initiatives. So just a small gist of looking back on January and mid February.
My Blog! codeklutz.com I have been wanting to make my own tech blog for a while now but I needed something which didn‚Äôt necessary requires much code or db maintenance.</description>
    </item>
    
    <item>
      <title>Making Peace with Windows!Installing wsl,zsh,powerlevel10k,fzf &amp; many more fun plugins for easy development</title>
      <link>https://codeklutz.com/posts/making-peace-with-windowsinstalling-wslzshpowerlevel10kfzf-many-more-fun-plugins-for-easy-development/</link>
      <pubDate>Fri, 21 Jan 2022 23:41:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/making-peace-with-windowsinstalling-wslzshpowerlevel10kfzf-many-more-fun-plugins-for-easy-development/</guid>
      <description>avigation, editing, development using terminal and zsh . But recently due to unforeseen updates, my bios was messed up big time which has led me unable to install Linux for the time being. But the work and learning never stops and nor shall I ! ‚ò∫ I don‚Äôt hate windows but it‚Äôs definitely not my first choice for development and coding after discovering Linux.ü§≠
But Thanks to WSL, windows terminal, and the beautiful zsh .</description>
    </item>
    
    <item>
      <title>Integrating Swagger OpenAPI for easy API documentation in spring boot</title>
      <link>https://codeklutz.com/posts/integrating-swagger-openapi-for-easy-api-documentation-in-spring-boot/</link>
      <pubDate>Sun, 16 Jan 2022 22:53:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/integrating-swagger-openapi-for-easy-api-documentation-in-spring-boot/</guid>
      <description>These days I am more into creating backend projects which include microservices.But if anyone wants to test these services one needs postman or do the old classic way of curl command.
Both do the job brilliantly but what if I wanted some user who doesn‚Äôt want to install postman or use curl and still wants to test my live APIs thru the browser? I came across this swagger open API specification and this is a really handy tool!</description>
    </item>
    
    <item>
      <title>Which would you go for? Spring boot cron job,scheduled tasks vs Events in Mysql.</title>
      <link>https://codeklutz.com/posts/which-would-you-go-for-spring-boot-cron-jobscheduled-tasks-vs-events-in-mysql/</link>
      <pubDate>Wed, 12 Jan 2022 23:49:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/which-would-you-go-for-spring-boot-cron-jobscheduled-tasks-vs-events-in-mysql/</guid>
      <description>I was recently studying about using cron jobs in spring boot for a particular use case for my small side project. I ended up not using the cron job but rather went the SQL way(will explain this in detail below). However,in the process I learnt a lot about cron jobs and scheduling in spring boot so this is just a small article about my learnings.
But first I shall tell you a little about my use case and why I thought about cron jobs in the first place‚Ä¶.</description>
    </item>
    
    <item>
      <title>Deploying my portfolio website for free on Github Pages using GitHub actions</title>
      <link>https://codeklutz.com/posts/deploying-my-portfolio-website-for-free-on-github-pages-using-github-actions/</link>
      <pubDate>Sun, 05 Dec 2021 23:23:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/deploying-my-portfolio-website-for-free-on-github-pages-using-github-actions/</guid>
      <description>I deployed my portfolio site and wanted to try out github actions and this is my experience of automating the deployment. This article is more focused on how you can use the GitHub actions and how easy it is to deploy your code to GitHub pages rather than the portfolio site code.So every time you make an update or build to your website ,the changes are automatically reflected and this automated deploying process makes work much faster.</description>
    </item>
    
    <item>
      <title>Polymorphism in Java</title>
      <link>https://codeklutz.com/posts/polymorphism-in-java/</link>
      <pubDate>Wed, 14 Jul 2021 23:28:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/polymorphism-in-java/</guid>
      <description>Just revisiting and explaining myself Polymorphism concept here through a blog post. The words Polymorphism means multiple forms.
In Java ,Polymorphism means multiple forms of an object. We shall divide this article into 3 sections.
1.Syntax
2.Calling a variable polymorphically.
3.Calling a method polymorphically.
1.SyntaxPermalink Now in polymorphism in Java, the thumb key rule to remember is
super = subPermalink Meaning the variable reference (LHS) must always be a super class reference and the object initialization(RHS) must a sub class.</description>
    </item>
    
    <item>
      <title>How constructors work in Java</title>
      <link>https://codeklutz.com/posts/how-constructors-work-in-java/</link>
      <pubDate>Mon, 14 Jun 2021 21:41:00 +0000</pubDate>
      
      <guid>https://codeklutz.com/posts/how-constructors-work-in-java/</guid>
      <description>Constructors are used every time to initialize instance variables. There are some additional rules associated with constructors that are often asked in interviews.Hence revising those here through a blog post.
A constructor is used to initialize instance variables When an object of an class is created,JVM goes to the class and searches for that matching constructor.If Constructor is NOT PRESENT it gives a compile error. By default every class has a constructor called default no argument constructor.</description>
    </item>
    
    
    
  </channel>
</rss>
